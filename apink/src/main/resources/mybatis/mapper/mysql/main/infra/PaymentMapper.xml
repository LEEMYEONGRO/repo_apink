<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.blackpink.infra.payment.PaymentDao">

	<resultMap id="resultMapObj"
		type="com.blackpink.infra.payment.PaymentDto"></resultMap>

	<sql id="selectCommon">
		FROM member a
		JOIN payment b
		on b.mbSeq = a.mbSeq
		JOIN productpayment c
		on c.pmSeq = b.pmSeq
		JOIN product d
		on d.pdSeq = c.pdSeq
		WHERE
		a.mbSeq = #{mbSeq}
		<!-- <if test="shGender != null and !shGender.equals('')">AND mbGender 
			= #{mbGender}</if> -->
		<choose>
			<when test="shOptionDate == 1">AND pmCreationDate BETWEEN #{shDateStart} AND
				#{shDateEnd} </when>
		</choose>

		<choose>
			<when test="shOption == 1">AND d.pdName LIKE CONCAT('%',#{shValue},'%')</when>
		</choose>
	</sql>

	
	<select id="selectList" resultMap="resultMapObj">
		SELECT
		a.mbSeq as memberSeq
		,b.pmSeq as paymentSeq
		,b.pmCreationDate
		,b.mbSeq
		,c.pdpmDeliveryStatus
		,c.pmSeq
		,c.pdSeq
		,d.pdSeq as productSeq
		,d.pdName
		,d.pdPrice
		<include refid="selectCommon"></include>
	</select>

	<select id="selectOneCount">
		SELECT COUNT(*)
		<include refid="selectCommon"></include>
	</select>
	
	<select id="item" resultMap="resultMapObj">
		SELECT
		mbEmail
		,mbDateBirth
		,mbName
		,mbGender
		,mbPhoneNumber
		FROM member
		WHERE
		mbSeq = #{mbSeq}
	</select>

	<sql id="addressCommon">
		FROM
		member a
		JOIN
		address b on b.mbSeq = a.mbSeq
		WHERE
		a.mbSeq = #{mbSeq}
	</sql>
	<!-- 주소정보불러오기 -->
	<select id="addressList" resultMap="resultMapObj">
		SELECT
		arSeq
		,arName
		,arUserName
		,arPhoneNumber
		,arPostalCode
		,arNumberAddress
		,arRoadNameAddress
		,arDetailAddress
		,arSeeAlso
		,mbSeq as addressSeq
		FROM address
		WHERE mbSeq = #{mbSeq}
		ORDER BY arSeq
	</select>

	<select id="addressCount">
		SELECT COUNT(*)
		FROM address
		WHERE mbSeq = #{mbSeq}
	</select>
	
	<!-- 단일 주소정보불러오기 -->
	<select id="addressItem" resultMap="resultMapObj">
		SELECT
		arSeq
		,arName
		,arUserName
		,arPhoneNumber
		,arPostalCode
		,arNumberAddress
		,arRoadNameAddress
		,arDetailAddress
		,arSeeAlso
		,mbSeq as addressSeq
		FROM address
		WHERE arSeq = #{arSeq}
	</select>
	
	<!-- 카드정보불러오기 -->
	<select id="paymentList" resultMap="resultMapObj">
		SELECT
		pmSeq
		,pmName
		,pmPayerName
		,pmCardNumber
		,pmCardMonth
		,pmCardYear
		,pmCardVerificationCode
		,pmDeleteNy
		,pmCreationDate
		,pmModificationDate
		,mbSeq
		FROM payment
		WHERE mbSeq = #{mbSeq}
	</select>
	
	<!-- 단일 카드정보불러오기 -->
	<select id="paymentItem" resultMap="resultMapObj">
		SELECT
		pmSeq
		,pmName
		,pmCardCode
		,pmPayerName
		,pmCardNumber
		,pmCardMonth
		,pmCardYear
		,pmCardVerificationCode
		,pmDeleteNy
		,pmCreationDate
		,pmModificationDate
		,mbSeq
		FROM payment
		WHERE pmSeq = #{pmSeq}
	</select>
	
	<insert id="addressInsert">
		INSERT INTO address (
		arName
		,arUserName
		,arPhoneNumber
		,arPostalCode
		,arNumberAddress
		,arRoadNameAddress
		,arDetailAddress
		,mbSeq
		)VALUES(
		#{arName}
		,#{arUserName}
		,#{arPhoneNumber}
		,#{arPostalCode}
		,#{arNumberAddress}
		,#{arRoadNameAddress}
		,#{arDetailAddress}
		,#{mbSeq}
		) 
	</insert>

	<update id="addressUpdate">
		UPDATE address
		SET
		arName = #{arName}
		,arUserName = #{arUserName}
		,arPhoneNumber = #{arPhoneNumber}
		,arPostalCode = #{arPostalCode}
		,arNumberAddress = #{arNumberAddress}
		,arRoadNameAddress = #{arRoadNameAddress}
		,arDetailAddress = #{arDetailAddress}
		WHERE 1=1
		AND arSeq = #{arSeq}
	</update>

	<update id="update">
		UPDATE member
		SET
		mbName = #{mbName}
		,mbDateBirth = #{mbDateBirth}
		,mbGender = #{mbGender}
		,mbPhoneNumber = #{mbPhoneNumber}
		WHERE 1=1
		AND mbEmail = #{mbEmail}
	</update>

	<select id="existingPassword" resultMap="resultMapObj">
		SELECT
		mbPassword
		FROM member
		WHERE 1=1
		AND mbSeq = #{mbSeq}
	</select>

	<update id="updatePw">
		UPDATE member
		SET
		mbPassword = #{newmbPassword}
		WHERE 1=1
		AND mbSeq = #{mbSeq}
	</update>

</mapper>
